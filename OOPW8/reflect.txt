In workshop 8, I learned about virtual functions. First, put the word 'virtual' before the function's name. This is useful when have different classes that are related and want them to behave differently when they use the same function. Also, I learned a pure virtual function. Pure virtual function do not have definition of a function and cannot create an instance. For example, virtual void getSpecs(std::istream &istr) = 0; When a class has at least one pure virtual function, it's called an abstract base class and can't be used on its own.  The class of overriding a pure virtual function is called a concrete class that provides the missing instructions and can be used to make objects. Lastly, I learned that when classes are connected this way, it's important to use virtual destructors to avoid problems when the program cleans up. 

During the workshop and  MS3, I spent much time to understood the  pure virtual functions, abstract base class, and concrete class. Also, I modify the Utils.cpp to add a getint and getdouble fuction to make MS3 is easy to implement. 