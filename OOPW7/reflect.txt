During the workshop 7, I learned the new function inheritance. Before workshop 7  I used member variables and functions by using public keyword to use different classes in one class. The keywords that I learned are public, private, and protected. The class that gives inheritance is called the base class. Inherited classes is called derived classes.  For example, class Pack : public Container. Pack is derived classes and Container is base class. And there is a rule between the derived class and the base class.When creating a derived class, the constructor of the derived class is called after calling the constructor of the base class. However, when derived class is terminated, the destructor of the derived class is called first, followed by the destructor of the base class. Finally, importantly, it is possible to call the constructors of the base class directly from the constructors of the derived class. For example,  Pack::Pack(const char* Content, int Size, int unitSize, int NumberOfUnits) : Container(Content, Size* unitSize, unitSize* NumberOfUnits).

In addition, And as I progressed with milestone 2 I spend lot of time to finish of  the constructor of menu Menu::Menu(const char* MenuContext) need to count the \t to get the number of option if over 15 set to invalid. And in unsigned Menu::run() const need print the format of the menuContext list.