I was learn how to copy an object during this workshop. First, there are two ways to copy an object. There are two copy using a constructor or  using the operator =.  First, the copy constructor receives a constant-type object reference as a parameter such as HealthCard::HealthCard(const HealthCard& hc).  The copy constructor delegates the work to the copy assignment operator by using *this = hc;. This means that when a new HealthCard object is created as a copy of another, it actually calls the copy assignment operator to copy the values from the existing object to the new one. The method using the operator "=" also receives a constant-type object reference as a parameter, such as a copy constructor. For example, HealthCard& HealthCard::operator=(const HealthCard& hc). "this" is a pointer to the current object, and &hc is the address of the object copying from. First, use this != &hc it checks if the addresses are different to avoid self-assignment. If  not the same, it uses the set method to copy the values from the source object to the current object. Finally, return *this;  Return a reference to the current object.

I have learned how to read formatted data using istream and write formatted data using ostream. In this workshop, I used overloaded insertions and extraction operators. Using helper functions such as std::istream& operator>>(std::istream& istr, HealthCard& hc) and std::ostream& operator<<(std::ostream& ostr, const HealthCard& hc) These operators were passed as a parameter to a function defined within the class of reading and writing the file and used to enter or read the values of the member variables.

And as I progressed with milestone 1, Status& Status::operator=(const Status& other) is use for copy assignment operator. std::ostream& operator<<(std::ostream& os, const Date& d), std::ostream& operator<<(std::ostream& out, const Status& status) and std::istream& operator>>(std::istream& is, Date& d) to be overloaded insertions and extraction operators. I spent a long time figuring out how to properly format the dates.